0.4 New Note

Create a similar diagram depicting the situation where the user creates a 
new note on page https://fullstack-exampleapp.herokuapp.com/notes by writing 
something into the text field and clicking the submit button.

browser->server: HTTP GET https://fullstack-exampleapp.herokuapp.com/notes
server-->browser: HTML-code
browser->server: HTTP GET https://fullstack-exampleapp.herokuapp.com/main.css
server-->browser: main.css
browser->server: HTTP GET https://fullstack-exampleapp.herokuapp.com/main.js
server-->browser: main.js

note over browser:
browser starts executing js-code
that requests JSON data from server 
end note

browser->server: HTTP GET https://fullstack-exampleapp.herokuapp.com/data.json
server-->browser: [{ content: "HTML is easy", date: "2019-05-23" }, ...]

note over browser:
browser executes the event handler
that renders notes to display
end note

user->browser: submits new note
browser->server:sends user input
browser->server: submit event - HTTP post request
server-->browser: HTTP status code 302 - URL redirect

note over server:
^ ^ Server asks the browser to 
do a new HTTP GET request to the 
address defined in the header's 
Location - the address notes.
end note

note over browser:
Browser reloads the Notes page. 
The reload causes three more 
HTTP requests:
end note

browser->server: Fetch the style sheet (main.css)
browser->server: Fetch the JavaScript code (main.js)
browser->server: Fetch the raw data of the notes (data.json)
server-->browser: POST request

note over server: 
^^ The server can access the data 
by accessing the req.body field 
of the request object req.
The Server creates a new note 
object, and adds it to an 
array called notes.